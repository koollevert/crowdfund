name: Deploy Smart Contract

on:
  push:
    branches:
      - main  # Deploy when there's a push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'  # Use a compatible Node.js version

    - name: Install dependencies
      run: npm install

    - name: Deploy contract
      env:
        INFURA_PROJECT_URL: ${{ secrets.INFURA_PROJECT_URL }}
        MNEMONIC: ${{ secrets.MNEMONIC }}
      run: |
        echo "Deploying contract..."
        node -e "
        const HDWalletProvider = require('@truffle/hdwallet-provider');
        const {Web3} = require('web3');
        const compiledFactory = require('./ethereum/build/CampaignFactory.json');

        const provider = new HDWalletProvider(process.env.MNEMONIC, process.env.INFURA_PROJECT_URL);
        const web3 = new Web3(provider);

        const deploy = async () => {
          try {
            const accounts = await web3.eth.getAccounts();
            console.log('Attempting to deploy from account', accounts[0]);

            const result = await new web3.eth.Contract(compiledFactory.interface)
              .deploy({ data: '0x' + compiledFactory.bytecode })
              .send({ from: accounts[0] });

            console.log('Contract deployed to', result.options.address);
          } catch (error) {
            console.error('Error deploying contract:', error.message || error);
            process.exit(1);  // Exit with an error code if deployment fails
          } finally {
            provider.engine.stop();
          }
        };

        deploy();
        "
